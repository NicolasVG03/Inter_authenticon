@page "/products/{Name}"
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS

<Header></Header>
<ModalAddProductToShoppingCart></ModalAddProductToShoppingCart>
<div class="div_ProductItems">
    <div class="div_ProductItemsHeader">
        <div class="div_ProductIHeadeMasculine inter-semi-bold-woodsmoke-18px">@collectionChosen.Name</div>
    </div>
    <div class="album py-5 bg-light div_products">
        <div class="container">
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
                @if (products != null)
                {
                    @foreach (var product in products)
                    {
                        <button data-toggle="modal" data-target="#modal-contatoShoppingCart">
                            <div class="col div_productsCol">
                                <img class="Img_Products" src="Imagens/img_ListProducts1.png" alt="Rectangle 17" />
                                <div class="frame-56-ZxxJx8">
                                    <div class="frame-55-gX3aRH">
                                        <div class="div_productTitle bodyb1">@product.Name</div>
                                        <div class="casual-dxaCBP subtitlesb1">@product.Description</div>
                                    </div>
                                    <div class="r-21000-gX3aRH subtitleprice">R$ @product.UnitPrice</div>
                                </div>
                            </div>
                        </button>

                    }
                }
            </div>
        </div>
    </div>
</div>

<div class="div_FooterProducts">
    <div class="div_FooterCenterItems">
        <div class="div_FooterPart1">
            <a class="a_FooterLogo poppins-bold-white-22px" href="/">
                <span class="span_authentic_white">authentic</span><span class="span_on">on</span>
            </a>
            <div class="div_FooterCopyright">@@Copyright2022authenticon</div>
        </div>
        <img class="img_LineFooter" src="Imagens/img_LineFooter.png" alt="Vector 5" />
        <div class="div_FooterPart2">
            <div class="div_FooterPart2Items">
                <div class="div_FooterPart2Brazil">
                    <img class="img_FooterBrazil" src="Imagens/icon_BrazilFlag.png" alt="Frame 72" />
                    <div class="div_FooterBrazilText bodyb1">Brasil</div>
                </div>
                <div class="div_FooterNewsletter bodyb1">Newsletter</div>
                <div class="div_FooterContact bodyb1">Contato</div>
                <a href="/products/Lançamentos">
                    <div class="div_FooterLaunch bodyb1">Lançamentos</div>
                </a>
                <a href="/products/Feminino">
                    <div class="div_FooterFeminine bodyb1">Feminino</div>
                </a>
                <a href="/products/Masculino">
                    <div class="div_FooterMasculine bodyb1">Masculino</div>
                </a>
            </div>
            <a href="/produtos/@collectionChosen.Name">
                <div class="div_FooterGoBeginning">Voltar ao início</div>
            </a>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public String Name { get; set; } = null!;

    public List<Collection>? collections = new List<Collection>();
    public List<Product>? products = new List<Product>();

    public Collection? collectionChosen { get; set; } = null!;



    protected override async Task OnInitializedAsync()
    {
        collections = await Http.GetFromJsonAsync<List<Collection>?>("collection");
        if (Name != null)
        {
            collectionChosen = await Http.GetFromJsonAsync<Collection>($"collectionChosen?name={Name}");
            if (collectionChosen != null)
                products = await Http.GetFromJsonAsync<List<Product>?>($"listproduct/{collectionChosen.CollectionID}");
        }
    }

    public class Collection
    {
        public int CollectionID { get; set; }
        public string? Name { get; set; }
    }

    public class Product
    {
        public int ProductID { get; set; }
        public string Name { get; set; } = null!;
        public string Description { get; set; } = null!;
        public string Color { get; set; } = null!;
        public string Size { get; set; } = null!;
        public decimal UnitPrice { get; set; }
        public int StockQuantity { get; set; }
        public char Gender { get; set; }
        public int Status { get; set; }
        public string? ImageUrl { get; set; } = null!;
        public int CollectionID { get; set; }
        public int CategoryID { get; set; }

    }

}